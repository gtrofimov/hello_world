# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    
    # Set up
    echo "Setting Up"
    mkdir tmp
    echo ${PWD}
    ls -R ${PWD}

    # Healthcheck LS
    echo "Health check LS"
    curl -I $(license.server.url)

    # Set Up and write .properties file
    echo -e "Setting up and creating config.properties file."
    echo $"
    parasoft.eula.accepted=true
    license.network.auth.enabled=true  
    license.network.password=$(license.server.password)
    license.network.url=$(license.server.url)
    license.network.use.specified.server=true
    license.network.user=admin
    soatest.license.network.edition=automation_edition
    soatest.license.use_network=true
    virtualize.license.network.edition=performance_server_edition
    virtualize.license.use_network=true" >> tmp/config.properties
    echo -e "\nDebug -- Verify workspace contents.\n"
    ls -R
    echo -e "\nDebug -- Verify config.properties file contents."
    cat tmp/config.properties

    # Deloy Docker Virt Server
    echo "Deploy Parasoft SOAVirt Server."
    docker run -d \
    -p 9080:9080 \
    -p 9617:9617 \
    -p 9618:9618 \
    --mount type=bind,source="$(pwd)"/tmp/config.properties,target=/usr/local/parasoft/soavirt/webapps/ROOT/WEB-INF/config.properties \
    --name soavirt-server parasoft/soavirt-server
    
    # Wait for Server to stand up
    sleep 15s
    
    curl -X POST \
    http://localhost:9080/soavirt/api/v6/preferences/systemProperties/reload

    # Healthcheck Parasoft SOAVirt Server
    echo "Ping SOAVirt."
    curl -u admin:admin http://localhost:9080/soavirt/api/v6/status -o tmp/server-hc.json
    ls -R
    cat tmp/server-hc.json
    sleep 5s
    echo "FOO."
  displayName: 'Deploy SOAVirt Server'

- script: |
    echo "Upload PVA."
    cd pva
    curl -iv --raw \
    -X POST \
    -u admin:admin \
    "http://localhost:9080/soavirt/api/v6/files/upload?id=%2FVirtualAssets%2FHelloWorld.pva&deploy=true" \
    -H "accept: application/json" \
    -H "Content-Type: multipart/form-data" \
    -F "file=@HelloWorld.pva"
    sleep 5s
    echo "FOO"
  displayName: 'Deploy PVA'

- script: |
    echo "Test PVA."
    curl http://localhost:9080/HelloWorld -o test.json
    cat test.json
    echo "FOO."
  displayName: 'Test PVA'
