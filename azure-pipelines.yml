# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: |
    
    # Set up
    echo "Setting Up."
    mkdir tmp
    echo ${PWD}
    ls -R ${PWD}

    # Deloy Docker Virt Server
    echo "Deploy Parasoft SOAVirt Server."
    docker run -d \
    -p 9080:9080 \
    -e ACCEPT_EULA=true \
    --name soavirt-server parasoft/soavirt-server
    
    # Wait for Server to stand up
    sleep 15s
    
    # Apply License
    curl -X PUT "http://localhost:9080/soavirt/api/v6/preferences/config" \
    -u admin:admin \
    -H "accept: application/log" \
    -H "Content-Type: application/log" \
    -d "{\"license\":{\"licenseServer\":{\"host\":\"$(license.server.host)\",\"port\":$(license.server.port),\"useSpecifiedServer\":true,\"connectionType\":\"http\",\"authEnabled\":true,\"username\":\"admin\",\"password\":\"$(license.server.password)\"},\"virtualize\":{\"enabled\":true,\"useNetwork\":true,\"network\":{\"edition\":\"performance_server_edition\"}}}}"

    # Healthcheck Parasoft SOAVirt Server
    echo "Ping SOAVirt."
    curl -u admin:admin http://localhost:9080/soavirt/api/v6/status -o tmp/server-hc.log
    ls -R
    cat tmp/server-hc.log
  displayName: 'Deploy SOAVirt Server'

- script: |
    echo "Upload PVA."
    cd virt
    for file in *
    do
      echo ${file}
      curl -iv --raw \
      -u admin:admin \
      -H "accept: application/json" \
      -H "Content-Type: multipart/form-data" \
      -F "file=@${file}" \
      "http://localhost:9080/soavirt/api/v6/files/upload?id=%2FVirtualAssets%2F${file}&deploy=true&replace=ture" -o upload.log

      echo -e "\nDebug.\n"
      cat upload.log
      sleep 5s
      echo -e "\nDone."
    done
  displayName: 'Deploy PVA'

- script: |
    echo "Test PVA."
    curl -v http://localhost:9080/HelloWorld -o test.log
    cat test.log
    echo -e "Done.
  displayName: 'Test PVA'